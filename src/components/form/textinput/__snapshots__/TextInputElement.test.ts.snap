// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInputElement renders 1`] = `
<TextInputElement
  autocomplete={true}
  entry={
    Object {
      "value": "",
    }
  }
  name="Message"
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  textarea={true}
>
  <ForwardRef
    label={null}
    on={
      Object {
        "input": [Function],
      }
    }
    size="sm"
    value=""
  >
    <ForwardRef
      component={
        Object {
          "_Ctor": Object {
            "0": [Function],
          },
          "_compiled": true,
          "_scopeId": "data-v-a95e6368",
          "methods": Object {
            "focus": [Function],
          },
          "name": "unnnicTextArea",
          "props": Object {
            "disabled": Object {
              "type": [Function],
            },
            "errors": Object {
              "default": [Function],
              "type": [Function],
            },
            "label": Object {
              "type": [Function],
            },
            "maxLength": Object {
              "type": [Function],
            },
            "placeholder": Object {
              "type": [Function],
            },
            "size": Object {
              "default": "md",
              "type": [Function],
            },
            "type": Object {
              "default": "normal",
              "type": [Function],
              "validator": [Function],
            },
            "value": Object {
              "type": [Function],
            },
          },
          "render": [Function],
          "staticRenderFns": Array [],
        }
      }
      label={null}
      on={
        Object {
          "input": [Function],
        }
      }
      size="sm"
      value=""
      vuereact-combined-options={
        Object {
          "react": Object {},
          "vue": Object {},
        }
      }
    >
      <r
        component={
          Object {
            "_Ctor": Object {
              "0": [Function],
            },
            "_compiled": true,
            "_scopeId": "data-v-a95e6368",
            "methods": Object {
              "focus": [Function],
            },
            "name": "unnnicTextArea",
            "props": Object {
              "disabled": Object {
                "type": [Function],
              },
              "errors": Object {
                "default": [Function],
                "type": [Function],
              },
              "label": Object {
                "type": [Function],
              },
              "maxLength": Object {
                "type": [Function],
              },
              "placeholder": Object {
                "type": [Function],
              },
              "size": Object {
                "default": "md",
                "type": [Function],
              },
              "type": Object {
                "default": "normal",
                "type": [Function],
                "validator": [Function],
              },
              "value": Object {
                "type": [Function],
              },
            },
            "render": [Function],
            "staticRenderFns": Array [],
          }
        }
        label={null}
        on={
          Object {
            "input": [Function],
          }
        }
        size="sm"
        value=""
        vuereact-combined-options={
          Object {
            "react": Object {
              "componentWrap": "div",
              "componentWrapAttrs": Object {
                "__use_react_component_wrap": "",
                "style": Object {
                  "all": "unset",
                },
              },
              "slotWrap": "div",
              "slotWrapAttrs": Object {
                "__use_react_slot_wrap": "",
                "style": Object {
                  "all": "unset",
                },
              },
            },
            "vue": Object {
              "componentWrapAttrs": Object {
                "data-use-vue-component-wrap": "",
                "style": Object {
                  "all": "unset",
                },
              },
              "componentWrapHOC": [Function],
              "slotWrapAttrs": Object {
                "data-use-vue-slot-wrap": "",
                "style": Object {
                  "all": "unset",
                },
              },
            },
          }
        }
      >
        <Component
          portals={Array []}
        >
          <div
            data-use-vue-component-wrap=""
            style={
              Object {
                "all": "unset",
              }
            }
          >
            <div
              key="null"
            />
          </div>
        </Component>
      </r>
    </ForwardRef>
  </ForwardRef>
</TextInputElement>
`;
